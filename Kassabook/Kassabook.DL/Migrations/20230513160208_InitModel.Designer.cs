// <auto-generated />
using System;
using Kassabook.DL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kassabook.DL.Migrations
{
    [DbContext(typeof(KassabookDbContext))]
    [Migration("20230513160208_InitModel")]
    partial class InitModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kassabook.DL.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0e0e6b0e-1428-4129-8e22-357395e45474"),
                            Balance = 0m,
                            Name = "Livsmedel",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("122f4071-1d4e-4df2-9b8b-2fea2579d66e"),
                            Balance = 0m,
                            Name = "Bankkonto",
                            Type = 3
                        },
                        new
                        {
                            Id = new Guid("8f6e4f60-c198-42f4-a96a-ef7f2679e3ed"),
                            Balance = 0m,
                            Name = "Hyra",
                            Type = 2
                        },
                        new
                        {
                            Id = new Guid("4b8ee890-1b36-470b-bd61-6edaa7588158"),
                            Balance = 0m,
                            Name = "Lön",
                            Type = 1
                        });
                });

            modelBuilder.Entity("Kassabook.DL.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ToAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Kassabook.DL.Models.Transaction", b =>
                {
                    b.HasOne("Kassabook.DL.Models.Account", "FromAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("FromAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromAccount");
                });

            modelBuilder.Entity("Kassabook.DL.Models.Account", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
